from eulermath import isprime

def quad(a,b,n):
    return (n**2 + a*n + b)

# For two values, a and b we form the quadratic n^2 + a*n + b
# We test consecutive values of n from 0 upwards
# If these values give a consecutive sequence of primes
# We return the length of the sequence
def lenprimeseq(a,b):
    myprime = 1
    n = 0
    seq = []
    while (myprime == 1):
        val = quad(a,b,n)
        # Negative integers cannot be prime
        if (val > 0):
            if (isprime(val)):
                seq.append(val)
            else:
                break
        n += 1
    return (len(seq))

# Test case, should produce 80 consecutive primes
# print lenprimeseq(-79,1601)

# Main case
longest = 0
la = -1001
lb = -1001
for a in xrange(-1000,1001):
    # if (a % 100 == 0):
    #     print "Currently at a =", a
    for b in xrange(-1000,1001):
        clen = lenprimeseq(a,b)
        if clen > longest :
            print "New longest chain at:", clen
            longest = clen
            la = a
            lb = b

print "The longest sequence of primes is:", longest
print "Generated by a =", la, "b =", lb
print "Yielding product a*b =", la*lb
